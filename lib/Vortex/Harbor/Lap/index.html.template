<!DOCTYPE html>
<html>
<head>
<title>L.A.P. Dashboard</title>
<meta charset="utf-8" />
<link rel="shortcut icon" type="image/x-icon" href="[[LINK_BASE]]/favicon.ico" />
<style type="text/css">

/* http://www.dafont.com/liquid-crystal.font + http://www.font2web.com/ */
@font-face {
	font-family: 'LiquidCrystal';
	src: url('[[LINK_BASE]]/script/LiquidCrystal-Normal.ttf') format('truetype');
	font-weight: normal;
	font-style: normal;
}

/* http://www.dafont.com/fr/lcd-lcd-mono.font */
@font-face {
	font-family: 'LCD-Mono';
	src: url('[[LINK_BASE]]/script/LCD-Mono-Normal.ttf') format('truetype');
	font-weight: normal;
	font-style: normal;
}

* {
	font-family: 'LiquidCrystal', monospace;
	letter-spacing: 1px;
	position:relative;
	margin:0;
	padding:0;
}


p {
	overflow: auto;
	width: 100%
}

p * {
	font-size:19px;
}

label {
	margin-left:48px;
	padding-left:2px;
	display:block;
	float:left;
	width:210px;
	clear:left;
	opacity:0.8;
}

code:before {
	content:">>";
	padding-right:10px;
}

code {
	display:block;
	float:left;
	color:#BCE3C5;
}

h1 { font-size: 40px; }

h2 {
	font-size: 30px;
	margin-top: 30px;
	margin-bottom: 5px;
}

h3 {
	font-size: 20px;
	margin-top: 10px;
	margin-bottom: 5px;
}

p.indicator {
	font-size: 30px;
	margin:0;
	display:block;
	position:fixed;
	padding: 20px 15px 0 0;
	top:0px;
	right:0px;
	width:120px;
	height:40px;
	z-index: 2;
	text-align: center;
	font-weight: bold;
}

.legendText {
	font-size:13px !important;
}

#head {
	padding:10px 15px 5px 15px;
	border-bottom: 4px solid #fff
}

#content  {
	margin:10px 15px 50px 15px;
}

#foot {
	margin:10px 0px 0px 0px;
	padding-bottom:100px;
	text-align: center;
	opacity: 0.3;
}

#foot:hover {
	opacity: 0.7
}

.glue {
	overflow: auto;
	width: 100%;
}

.boxSlow {
	float:left;
	width:30%;
}

.box {
	overflow:hidden;
	height:150px;
	float:left;
	width:69%;
}

a {
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}

.connectionError {
	display:none;
	position:fixed;
	border:3px solid red;
	background-color:yellow;
	font-size:20px;
	color:red;
	left:30%;

	/*height:310px;*/
	width:35%;
	min-width:400px;
	
	top:20%;
	z-index:4;
	padding:20px;
	text-align:center;
	border-radius:10px;
}

.connectionError img {
	display:none;
	width:360px;
	margin:10px 15px 15px 15px;
}

</style>
<script type="text/javascript" src="[[LINK_BASE]]/script/jquery-1.7.2.min.js"> </script>
<script type="text/javascript" src="[[LINK_BASE]]/script/d3.v2.min.js"> </script>
<script type="text/javascript" src="[[LINK_BASE]]/script/smoothiebar.js"> </script>
<script type="text/javascript">
window.onload = function() {

var connectionLost;
var isFirefox = (window.navigator.userAgent.match(/Firefox/) != null);
var errorImage = './script/error-img2.gif';

/* preload error gif */
$('<img />').attr('src', errorImage).appendTo('body').css('display', 'block').css('width', '1px').css('height', '1px').css("opacity", "0.1");
$('<img />').attr('src', errorImage).appendTo('.connectionError');

/* refresh for firefox and chrome */
var refresh = function(force) {
	// if connection is lost, don't refresh (unless forced)
	if (connectionLost != null && !force) return;
	if (isFirefox) {
		window.location = window.location;
		location.reload(true);
	} else {
		location.reload(true);
	}
};
window.onresize = function() {
	refresh();
};
/*var firstFocus = true;
window.onfocus = function() {
	if (firstFocus) {
		firstFocus = false;
	} else {
		refresh();
	}
};*/

/* check if the js thread has slept */
var lastRequest = Date.now();
var checkThreadSleep = function() {
	var delay = Date.now() - lastRequest;
	lastRequest = Date.now();
	// if no request for 7 seconds, refresh
	if (delay > 7*1000) {
		refresh();
	}
};

/* connection error handler */
var url = "[[URL_FRONT]]ppc.lap.[[HARBOR_TLD]]/";
var urlInfo = url + "info";
connectionLostHandler = function() {
	if (connectionLost) return;
	connectionLost = Date.now();
	var showErr = function() {
		$(".connectionError").show();
		var t = Math.floor((Date.now() - connectionLost)/1000);
		var h=0; m=0;
		if (t > 3600) { h=Math.floor(t/3600), t=t%3600; }
		if (t > 60) { m=Math.floor(t/60), t=t%60; }
		$(".connectionError span").html("Connection Lost<br/>" + (h>0? h+" h ":"")  + (m>0? m+" m ":"") + (t>0? t+" s":""));
		if (t > 29) $(".connectionError img").show();
		setTimeout(showErr, 1000);
	};
	showErr();
	var testConnection = function() {
		$.ajax({url:urlInfo, crossDomain: true, dataType: "json", timeout:3000}).done(function(data) {
			refresh(true);
		}).fail(function(xhr, err, ex) {
			setTimeout(testConnection, 5000);
		});
	}
	testConnection();
};

/* info updater (lap and writers) */
var formatTime = d3.time.format("%Y-%m-%d %H:%M:%S");
var formatSize = SmoothieBar.getFormat("B");
var setInfo = function(id, text, showControl) {
	$("#" + id).text(text);
	if (text == undefined || text == null || showControl == false) {
		$("#" + id).hide();
		$("label[for=" + id + "]").hide();
	}
};
var infoRequester = function() {
	$.ajax({url:urlInfo, crossDomain: true, dataType: "json"}).done(function(data) {
		if (typeof(data) !== "object") data = JSON.parse(data);
		
		setInfo("start", formatTime.call(null, new Date(data.start_date)));
		setInfo("netloc", data.host + ":" + data.port + " / " + data.ip + ":" + data.port);
		setInfo("writer_count", data.writers.length);
		setInfo("digest", data.digest);
		setInfo("writer_port", data.writer_port);
		setInfo("deduplicator", data.bloom_netloc)
		setInfo("deduplicator_queue", data.before_deduplication + " (" + formatSize.call(null, data.before_deduplication_size) + ")", data.bloom_netloc !== null);
		setInfo("writer_queue", data.before_writers + " (" + formatSize.call(null, data.before_writers_size) + ")");
		setInfo("proxy", data.proxy);
		setInfo("content_dir", data.content_dir + " (" + formatSize.call(null, data.content_max_memory) + ")");
		setInfo("url", "http://" + data.host + ":" + data.port + "/lap." + data.harbor_tld + "/");

		var ws = $("#writers").html(""), i;
		for (i=0; i<data.writers.length; ++i) {
			var w = data.writers[i], p = $("<p/>");
			ws.append($("<h3/>").text(w.info.writer_agent));
			delete w.info.writer_agent;
			//ws.append($("<h3/>").text("Writer [" + i + "]"));
			ws.append(p);
			
			for (var wik in w) {
				for (var key in w[wik]) {
					var value = w[wik][key];
					if (value === null) continue;
					if (key.match(/_size$/) !== null || key.match(/memory$/) !== null) {
						value = formatSize.call(null, value);
					} else if (key.match(/_time$/) !== null) {
						value = formatTime.call(null, new Date(value));
					}
					p.append($("<label/>").text(key)).append($("<code/>").text(value));
				}
			}
		}
		if (i == 0) $("#writers").html("<p><label>None</label></p>");
		
		setTimeout(infoRequester, 5000);
	}).fail(function(xhr, err, ex) {
		console.log("1-" + err + "-" + ex);
		connectionLostHandler();
	});
};
infoRequester();

/* grouped data requester generator */
var dataRequester = function(url) {
	var cbs = [];
	var instances = 0;
	var calls = 0;
	return function(datasetNames, divider, modifier) {
	if (divider === undefined) divider = 1;
		instances++;
		// cb wrapper to filter out unwanted datasets
		var wrapCb = function(cb) {
			return function(data) {
				var d = {}, a;
				for (var i=0, il=datasetNames.length; i<il; ++i) {
					a = data[datasetNames[i]];
					a = a.map(function(x) { return x/divider });
					d[datasetNames[i]] = a;
				}
				if (modifier) d = modifier.call(undefined, d);
				cb.call(undefined, d);
			};
		};
		// the following gets called by smoothieBar
		return function(wanted, cb) {
			cbs.push(wrapCb(cb));
			// if all instances have called
			if (++calls == instances) {
				calls = 0;
				if (connectionLost) return;
				checkThreadSleep();
				$.ajax({url: url + wanted, crossDomain: true, dataType: "json"}).done(function(data) {
					while (cbs.length > 0) cbs.shift().call(undefined, data);
				}).fail(function(e) {
					connectionLostHandler();
				});
			}
		}
	};
};
var rShort = dataRequester(url + "histo_short/");
var rLong = dataRequester(url + "histo_long/");

/* styles - http://www.colourlovers.com/palette/678929/War */
var cCharts1 = "#82B3AE"
var cCharts2 = "#BCE3C5"
var cLabels = "#EBEBBC";
var cBackground = "#230F2B"
var cTitle1 = "#BCE3C5"
var cTitle1Bg = "#230F2B"
var cTitle2 = "#EBEBBC" 
var cHighlight = "#D1E751"

d3.selectAll("body")
	.style("color", cLabels)
	.style("background-color", cBackground)
	;
d3.selectAll("#head")
	.style("color", cTitle1)
	.style("background-color", cTitle1Bg)
	.style("border-bottom-color", cTitle1)
	.style("text-shadow", "0px 0px 20px " + cCharts2)
	;
d3.selectAll("h2").style("color", cTitle2);
d3.selectAll("code").style("color", cCharts2);
d3.selectAll("a, a:visited, a:active, a:hover")
	.style("color", cCharts2)
	.style("text-shadow", "0px 0px 4px " + cCharts2)
	;
d3.selectAll(".connectionError")
	.style("border", "5px solid " + cHighlight)
	.style("background-color", d3.rgb(cBackground).brighter())
	.style("color", cHighlight)
	;

/* smoothiebar charts */
SmoothieBar.setDefaultParams({
	colorRange: [cCharts1, cCharts2],
	axisColor: cLabels,
	axisFontSize: 11 + (isFirefox ? 1 : 0),
	stackScaleMax: -1,
	totalHeight: 150,
	frameDuration:1000,
	wantedItems: 45,
	//transitionEase: "bounce",
	transitionDuration: 400,
	padding: {
		left:50,
		right:7,
		top:40,
	}
});

var heightFast = 150;
var wantedFast = 100;
var yaoFast = true;
var paddingFast = { left:7, right:50 }
var bandwidthModifier = function(d) {
	var cg = 'compression', nu = 'real';
	var r = {};
	r[nu] = [], r[cg] = [];
	for (var i=0, l=d['data_size'].length; i<l; ++i) {
		r[cg][i] = d['data_size'][i] - d['tcp_size'][i];
		r[nu][i] = d['tcp_size'][i];
	}
	return r;
};

var s1 = new SmoothieBar("box1", {
	frameDuration:60*1000,
	dataLoader: rLong(["reqs"], 60),
});
var s2 = new SmoothieBar("box2", {
	totalHeight: heightFast,
	wantedItems: wantedFast,
	yAxisRight: yaoFast,
	padding: paddingFast,
	dataLoader: rShort(["reqs"]),
});

var s3 = new SmoothieBar("box3", {
	frameDuration:60*1000,
	dataLoader: rLong(["data_size", "tcp_size"], 60, bandwidthModifier),
	yAxisFormat: SmoothieBar.getFormat("B"),
});
var s4 = new SmoothieBar("box4", {
	totalHeight: heightFast,
	wantedItems: wantedFast,
	yAxisRight: yaoFast,
	padding: paddingFast,
	dataLoader: rShort(["data_size", "tcp_size"], 1, bandwidthModifier),
	yAxisFormat: SmoothieBar.getFormat("B"),
});

var s5 = new SmoothieBar("box5", {
	frameDuration:60*1000,
	dataLoader: rLong(["ram_size", "disk_size"]),
	yAxisFormat: SmoothieBar.getFormat("B"),
});
var s6 = new SmoothieBar("box6", {
	totalHeight: heightFast,
	wantedItems: wantedFast,
	yAxisRight: yaoFast,
	padding: paddingFast,
	dataLoader: rShort(["ram_size", "disk_size"]),
	yAxisFormat: SmoothieBar.getFormat("B"),
});

// start charts animations
s1.start();
s2.start();
s3.start();
s4.start();
s5.start();
s6.start();


/* top right indicator */
var symb, iDuration, cc = 0;
var indicator = d3.selectAll("p.indicator");
var hash = window.location.hash.substring(1);
if (hash == "rotate") {
	symb = ["—", "\\", "|", "/"];
	iDuration = 180;
} else if (hash == "dot") {
	symb = ["&bull;", " "];
	iDuration = 450;
} else {
	hash = "time";
	symb = [":", " "];
	iDuration = 1000;
	indicator.style("font-family", "'LCD-Mono', monospace")
}
var counter = 0;
indicator
	.style("color", cHighlight)
	.style("text-shadow", "0px 0px 20px " + cHighlight)
	;
var updateIndicator = function() {
	var s = symb[counter];
	if (hash == "time") {
		var d = new Date();
		s = (d.getHours() < 10 ? "0" : "") + d.getHours() + s 
			+ (d.getMinutes() < 10 ? "0" : "") + d.getMinutes();
	}
	d3.selectAll("p.indicator").html(s);
	counter = (counter + 1) % symb.length;
	setTimeout(updateIndicator, iDuration);
}
updateIndicator();


};
</script>
</head>
<body>
<div id="head">
	<h1>Live Archiving Proxy Dashboard</h1> <p class="indicator"></p>
</div>
<div id="content">
	<div class="connectionError">
		<span>Connection error<br/>3 s</span><br />
	</div>

	<h2>Status</h2>
	<p>

		<label for="start">Start date</label>
		<code id="start">-</code>

		<label for="url">Dashboard URL</label>
		<code id="url">-</code>

		<label for="netloc">LAP netloc</label>
		<code id="netloc">-</code>
		
		<label for="digest">Digest</label>
		<code id="digest">-</code>
		
		<label for="proxy">Proxy netloc</label>
		<code id="proxy">-</code>
		
		<label for="deduplicator">Deduplicator netloc</label>
		<code id="deduplicator">-</code>
		
		<label for="deduplicator_queue">Deduplicator queue</label>
		<code id="deduplicator_queue">-</code>
		
		<label for="writer_port">Writer port</label>
		<code id="writer_port">-</code>
		
		<label for="content_dir">Disk cache (treshold)</label>
		<code id="content_dir">-</code>
		
		<label for="writer_count">Writers</label>
		<code id="writer_count">-</code>
		
		<label for="writer_queue">Writers queue</label>
		<code id="writer_queue">-</code>
		
		<!--
		content_max_absolute: null
		-->
		
	</p>

	<h2>Requests</h2>
	<div class="glue">
	<div id="box1" class="boxSlow"></div>
	<div id="box2" class="box"></div>
	</div>

	<h2>Bandwidth</h2>
	<div class="glue">
	<div id="box3" class="boxSlow"></div>
	<div id="box4" class="box"></div>
	</div>

	<h2>Memory footprint</h2>
	<div class="glue">
	<div id="box5" class="boxSlow"></div>
	<div id="box6" class="box"></div>
	</div>

	<h2>Connected writers</h2>
	<div id="writers">
	<h3>Writer [1]</h3>
	<!--p>
		<label>Version</label> <code>Java ARC Writer 0.2</code>
		<label>IP</label> <code>11.12.13.15</code>
		<label>Commited</label> <code>562 GB</code>
		<label>Free space</label> <code>1.3 TB</code>
		<label>Connection date</label> <code><script>document.write(new Date() + "")</script></code>
	</p>

	<h3>Writer [2]</h3>
	<p>
		<label>Version</label> <code>Perl DAFF Writer 0.1</code>
		<label>IP</label> <code>11.12.13.16</code>
		<label>Commited</label> <code>1.1 TB</code>
		<label>Free space</label> <code>5.3 TB</code>
		<label>Connection date</label> <code><script>document.write(new Date() + "")</script></code>
	</p-->
	</div>

</div>
<div id="foot">
	Built by 
	<a href="http://www.institut-national-audiovisuel.fr/actualites/webzine/depotlegalweb.html" target="_blank">Ina</a> 
	(<a href="http://twitter.com/inadlweb" target="_blank">@inadlweb</a>)
	| Fonts: 
	<a href="http://www.dafont.com/liquid-crystal.font" target="_blank">Liquid Crystal</a>,
	<a href="http://www.dafont.com/fr/lcd-lcd-mono.font" target="_blank">LCD Mono</a>
</div>
</body>
</html>
